
import React from 'react';
import { ArrowLeft, Timer, CheckSquare, Music, BarChart3, Clock, Settings, Play, Pause } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { useNavigate } from 'react-router-dom';

const UserGuideDetail = () => {
  const navigate = useNavigate();

  const sections = [
    {
      id: 'pomodoro',
      title: 'Pomodoro Timer',
      icon: Timer,
      color: 'text-blue-500',
      steps: [
        'Nh·∫•n n√∫t "B·∫Øt ƒë·∫ßu" ƒë·ªÉ kh·ªüi ƒë·ªông chu k·ª≥ 25 ph√∫t l√†m vi·ªác',
        'T·∫≠p trung ho√†n to√†n v√†o nhi·ªám v·ª• trong th·ªùi gian n√†y',
        'Khi h·∫øt th·ªùi gian, h·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông chuy·ªÉn sang ngh·ªâ 5 ph√∫t',
        'Sau 4 chu k·ª≥, b·∫°n s·∫Ω ƒë∆∞·ª£c ngh·ªâ d√†i 15 ph√∫t',
        'S·ª≠ d·ª•ng n√∫t Settings ƒë·ªÉ t√πy ch·ªânh th·ªùi gian ph√π h·ª£p'
      ]
    },
    {
      id: 'tasks',
      title: 'Qu·∫£n l√Ω Task',
      icon: CheckSquare,
      color: 'text-green-500',
      steps: [
        'Nh·∫•n n√∫t "+" ƒë·ªÉ th√™m nhi·ªám v·ª• m·ªõi',
        'ƒê·∫∑t t√™n v√† m√¥ t·∫£ chi ti·∫øt cho task',
        'ƒê√°nh d·∫•u ho√†n th√†nh khi k·∫øt th√∫c',
        'X√≥a ho·∫∑c ch·ªânh s·ª≠a task khi c·∫ßn thi·∫øt',
        'S·∫Øp x·∫øp task theo ƒë·ªô ∆∞u ti√™n'
      ]
    },
    {
      id: 'music',
      title: 'Nh·∫°c n·ªÅn t·∫≠p trung',
      icon: Music,
      color: 'text-purple-500',
      steps: [
        'Ch·ªçn b√†i nh·∫°c ph√π h·ª£p t·ª´ danh s√°ch',
        'ƒêi·ªÅu ch·ªânh √¢m l∆∞·ª£ng v·ª´a ph·∫£i',
        'S·ª≠ d·ª•ng nh·∫°c kh√¥ng l·ªùi ƒë·ªÉ tr√°nh m·∫•t t·∫≠p trung',
        'Thay ƒë·ªïi nh·∫°c khi c·∫£m th·∫•y nh√†m ch√°n',
        'T·∫Øt nh·∫°c n·∫øu c·∫ßn y√™n tƒ©nh ho√†n to√†n'
      ]
    },
    {
      id: 'schedule',
      title: 'H·∫πn gi·ªù th√¥ng minh',
      icon: Clock,
      color: 'text-orange-500',
      steps: [
        'Nh·∫•n n√∫t "+" trong ph·∫ßn H·∫πn gi·ªù',
        'Nh·∫≠p t√™n c√¥ng vi·ªác v√† th·ªùi gian c·ª• th·ªÉ',
        'Th√™m m√¥ t·∫£ chi ti·∫øt n·∫øu c·∫ßn',
        'H·ªá th·ªëng s·∫Ω nh·∫Øc nh·ªü ƒë√∫ng gi·ªù ƒë√£ h·∫πn',
        'B·∫≠t/t·∫Øt l·ªãch h·∫πn theo nhu c·∫ßu'
      ]
    },
    {
      id: 'history',
      title: 'Th·ªëng k√™ & L·ªãch s·ª≠',
      icon: BarChart3,
      color: 'text-red-500',
      steps: [
        'Xem t·ªïng quan hi·ªáu qu·∫£ l√†m vi·ªác theo ng√†y',
        'Theo d√µi s·ªë chu k·ª≥ Pomodoro ƒë√£ ho√†n th√†nh',
        'Ph√¢n t√≠ch th·ªùi gian t·∫≠p trung hi·ªáu qu·∫£',
        'So s√°nh ti·∫øn ƒë·ªô qua c√°c ng√†y',
        'Xem chi ti·∫øt t·ª´ng phi√™n l√†m vi·ªác'
      ]
    }
  ];

  const tips = [
    {
      title: 'Chu·∫©n b·ªã kh√¥ng gian l√†m vi·ªác',
      content: 'T·∫°o m√¥i tr∆∞·ªùng y√™n tƒ©nh, tho√°ng m√°t v√† √≠t b·ªã ph√¢n t√¢m.'
    },
    {
      title: 'L·∫≠p k·∫ø ho·∫°ch tr∆∞·ªõc',
      content: 'X√°c ƒë·ªãnh r√µ m·ª•c ti√™u v√† chia nh·ªè c√¥ng vi·ªác th√†nh c√°c task c·ª• th·ªÉ.'
    },
    {
      title: 'T·∫Øt th√¥ng b√°o',
      content: 'T·∫Øt ƒëi·ªán tho·∫°i, email v√† c√°c ·ª©ng d·ª•ng g√¢y ph√¢n t√¢m trong l√∫c l√†m vi·ªác.'
    },
    {
      title: 'Ngh·ªâ ng∆°i ƒë√∫ng c√°ch',
      content: 'S·ª≠ d·ª•ng th·ªùi gian ngh·ªâ ƒë·ªÉ th∆∞ gi√£n, kh√¥ng l√†m vi·ªác hay suy nghƒ© v·ªÅ c√¥ng vi·ªác.'
    },
    {
      title: 'Ki√™n tr√¨ v√† ƒëi·ªÅu ch·ªânh',
      content: 'Th·ª±c h√†nh ƒë·ªÅu ƒë·∫∑n v√† ƒëi·ªÅu ch·ªânh th·ªùi gian cho ph√π h·ª£p v·ªõi b·∫£n th√¢n.'
    }
  ];

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-slate-900">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="flex items-center gap-4 mb-8">
          <Button 
            variant="outline" 
            onClick={() => navigate('/')}
            className="flex items-center gap-2"
          >
            <ArrowLeft className="h-4 w-4" />
            Quay l·∫°i
          </Button>
          <div>
            <h1 className="text-3xl font-light text-slate-800 dark:text-white">
              H∆∞·ªõng d·∫´n chi ti·∫øt FocusFlow Pro
            </h1>
            <p className="text-slate-600 dark:text-slate-400 mt-1">
              T√¨m hi·ªÉu c√°ch s·ª≠ d·ª•ng hi·ªáu qu·∫£ m·ªçi t√≠nh nƒÉng c·ªßa ·ª©ng d·ª•ng
            </p>
          </div>
        </div>

        {/* Quick Start */}
        <Card className="p-6 mb-8 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold mb-4 text-blue-800 dark:text-blue-300">
            üöÄ B·∫Øt ƒë·∫ßu nhanh
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">1</div>
              <span className="text-blue-700 dark:text-blue-300">T·∫°o danh s√°ch task</span>
            </div>
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">2</div>
              <span className="text-blue-700 dark:text-blue-300">B·∫Øt ƒë·∫ßu Pomodoro</span>
            </div>
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">3</div>
              <span className="text-blue-700 dark:text-blue-300">Theo d√µi ti·∫øn ƒë·ªô</span>
            </div>
          </div>
        </Card>

        {/* Feature Sections */}
        <div className="space-y-8">
          {sections.map((section) => (
            <Card key={section.id} className="p-6">
              <div className="flex items-center gap-3 mb-4">
                <section.icon className={`h-6 w-6 ${section.color}`} />
                <h2 className="text-xl font-semibold text-slate-800 dark:text-white">
                  {section.title}
                </h2>
              </div>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-medium mb-3 text-slate-700 dark:text-slate-300">
                    C√°c b∆∞·ªõc th·ª±c hi·ªán:
                  </h3>
                  <ol className="space-y-2">
                    {section.steps.map((step, index) => (
                      <li key={index} className="flex items-start gap-3">
                        <span className={`w-6 h-6 ${section.color.replace('text-', 'bg-').replace('-500', '-100')} ${section.color} rounded-full flex items-center justify-center text-xs font-bold mt-0.5`}>
                          {index + 1}
                        </span>
                        <span className="text-slate-600 dark:text-slate-400 text-sm leading-relaxed">
                          {step}
                        </span>
                      </li>
                    ))}
                  </ol>
                </div>
                
                <div className={`p-4 rounded-lg ${section.color.replace('text-', 'bg-').replace('-500', '-50')} dark:${section.color.replace('text-', 'bg-').replace('-500', '-900/30')}`}>
                  <h3 className={`font-medium mb-2 ${section.color.replace('-500', '-700')} dark:${section.color.replace('-500', '-300')}`}>
                    üí° M·∫πo s·ª≠ d·ª•ng
                  </h3>
                  <div className={`text-sm ${section.color.replace('-500', '-600')} dark:${section.color.replace('-500', '-200')}`}>
                    {section.id === 'pomodoro' && (
                      <p>Kh√¥ng b·∫Øt bu·ªôc ph·∫£i l√†m ƒë√∫ng 25 ph√∫t. H√£y ƒëi·ªÅu ch·ªânh th·ªùi gian ph√π h·ª£p v·ªõi kh·∫£ nƒÉng t·∫≠p trung c·ªßa b·∫°n.</p>
                    )}
                    {section.id === 'tasks' && (
                      <p>Chia c√°c task l·ªõn th√†nh nhi·ªÅu task nh·ªè. M·ªói task n√™n ho√†n th√†nh ƒë∆∞·ª£c trong 1-2 chu k·ª≥ Pomodoro.</p>
                    )}
                    {section.id === 'music' && (
                      <p>Nh·∫°c c·ªï ƒëi·ªÉn, ambient ho·∫∑c white noise th∆∞·ªùng hi·ªáu qu·∫£ nh·∫•t cho vi·ªác t·∫≠p trung.</p>
                    )}
                    {section.id === 'schedule' && (
                      <p>ƒê·∫∑t h·∫πn gi·ªù cho c√°c ho·∫°t ƒë·ªông quan tr·ªçng nh∆∞ h·ªçp, g·ªçi ƒëi·ªán, ho·∫∑c ngh·ªâ gi·∫£i lao.</p>
                    )}
                    {section.id === 'history' && (
                      <p>Theo d√µi xu h∆∞·ªõng hi·ªáu qu·∫£ theo th·ªùi gian ƒë·ªÉ t√¨m ra th·ªùi ƒëi·ªÉm l√†m vi·ªác t·ªët nh·∫•t c·ªßa b·∫°n.</p>
                    )}
                  </div>
                </div>
              </div>
            </Card>
          ))}
        </div>

        {/* Tips Section */}
        <Card className="p-6 mt-8">
          <h2 className="text-xl font-semibold mb-6 text-slate-800 dark:text-white">
            üéØ B√≠ quy·∫øt tƒÉng hi·ªáu qu·∫£ l√†m vi·ªác
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {tips.map((tip, index) => (
              <div key={index} className="p-4 border border-slate-200 dark:border-slate-700 rounded-lg">
                <h3 className="font-medium mb-2 text-slate-700 dark:text-slate-300">
                  {tip.title}
                </h3>
                <p className="text-sm text-slate-600 dark:text-slate-400 leading-relaxed">
                  {tip.content}
                </p>
              </div>
            ))}
          </div>
        </Card>

        {/* FAQ Section */}
        <Card className="p-6 mt-8">
          <h2 className="text-xl font-semibold mb-6 text-slate-800 dark:text-white">
            ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p
          </h2>
          <div className="space-y-4">
            <div className="border-l-4 border-blue-500 pl-4">
              <h3 className="font-medium text-slate-700 dark:text-slate-300 mb-1">
                T·∫°i sao n√™n s·ª≠ d·ª•ng k·ªπ thu·∫≠t Pomodoro?
              </h3>
              <p className="text-sm text-slate-600 dark:text-slate-400">
                K·ªπ thu·∫≠t n√†y gi√∫p chia nh·ªè c√¥ng vi·ªác, tƒÉng kh·∫£ nƒÉng t·∫≠p trung v√† gi·∫£m stress. C√°c nghi√™n c·ª©u cho th·∫•y l√†m vi·ªác trong kho·∫£ng th·ªùi gian ng·∫Øn v·ªõi ngh·ªâ gi·∫£i lao ƒë·ªÅu ƒë·∫∑n s·∫Ω hi·ªáu qu·∫£ h∆°n l√†m vi·ªác li√™n t·ª•c trong th·ªùi gian d√†i.
              </p>
            </div>
            
            <div className="border-l-4 border-green-500 pl-4">
              <h3 className="font-medium text-slate-700 dark:text-slate-300 mb-1">
                L√†m th·∫ø n√†o ƒë·ªÉ kh√¥ng b·ªã ph√¢n t√¢m trong l√∫c l√†m vi·ªác?
              </h3>
              <p className="text-sm text-slate-600 dark:text-slate-400">
                T·∫Øt t·∫•t c·∫£ th√¥ng b√°o kh√¥ng c·∫ßn thi·∫øt, chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß t√†i li·ªáu tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu, v√† cam k·∫øt kh√¥ng l√†m vi·ªác kh√°c trong th·ªùi gian Pomodoro.
              </p>
            </div>
            
            <div className="border-l-4 border-purple-500 pl-4">
              <h3 className="font-medium text-slate-700 dark:text-slate-300 mb-1">
                C√≥ n√™n s·ª≠ d·ª•ng nh·∫°c khi l√†m vi·ªác?
              </h3>
              <p className="text-sm text-slate-600 dark:text-slate-400">
                T√πy thu·ªôc v√†o lo·∫°i c√¥ng vi·ªác v√† s·ªü th√≠ch c√° nh√¢n. Nh·∫°c kh√¥ng l·ªùi th∆∞·ªùng t·ªët cho c√°c t√°c v·ª• l·∫∑p ƒëi l·∫∑p l·∫°i, trong khi im l·∫∑ng c√≥ th·ªÉ t·ªët h∆°n cho c√¥ng vi·ªác c·∫ßn suy nghƒ© s√¢u.
              </p>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default UserGuideDetail;
